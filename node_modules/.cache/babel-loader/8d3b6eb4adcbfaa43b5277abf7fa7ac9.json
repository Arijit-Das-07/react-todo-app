{"ast":null,"code":"import _slicedToArray from\"/home/arijitdas/learn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Form from\"./Form\";function Task(_ref){var editTodo=_ref.editTodo,todo=_ref.todo,deleteTodo=_ref.deleteTodo;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEdit=_useState2[0],setIsEdit=_useState2[1];var handleEdit=function handleEdit(text){setIsEdit(false);editTodo(todo.id,text);};return/*#__PURE__*/React.createElement(\"div\",null,isEdit?/*#__PURE__*/React.createElement(Form,{onSubmit:handleEdit,value:todo.task,buttonText:\"Update\"}):/*#__PURE__*/React.createElement(\"p\",null,todo.task,\"\\xA0\",/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){setIsEdit(true);}},\"edit\"),\"\\xA0\",/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){deleteTodo(todo.id);}},\"delete\")));}export default Task;","map":{"version":3,"sources":["/home/arijitdas/learn/src/Task.js"],"names":["React","useState","Form","Task","editTodo","todo","deleteTodo","isEdit","setIsEdit","handleEdit","text","id","task"],"mappings":"wGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,QAASC,CAAAA,IAAT,MAA8C,IAA9BC,CAAAA,QAA8B,MAA9BA,QAA8B,CAApBC,IAAoB,MAApBA,IAAoB,CAAdC,UAAc,MAAdA,UAAc,eAChBL,QAAQ,CAAC,KAAD,CADQ,wCACrCM,MADqC,eAC7BC,SAD6B,eAG5C,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,IAAI,CAAI,CACzBF,SAAS,CAAC,KAAD,CAAT,CACAJ,QAAQ,CAACC,IAAI,CAACM,EAAN,CAAUD,IAAV,CAAR,CACD,CAHD,CAKA,mBACE,+BACGH,MAAM,cACL,oBAAC,IAAD,EAAM,QAAQ,CAAEE,UAAhB,CAA4B,KAAK,CAAEJ,IAAI,CAACO,IAAxC,CAA8C,UAAU,CAAC,QAAzD,EADK,cAGL,6BACGP,IAAI,CAACO,IADR,qBAEE,8BACE,OAAO,CAAE,kBAAM,CACbJ,SAAS,CAAC,IAAD,CAAT,CACD,CAHH,SAFF,qBAUE,8BACE,OAAO,CAAE,kBAAM,CACbF,UAAU,CAACD,IAAI,CAACM,EAAN,CAAV,CACD,CAHH,WAVF,CAJJ,CADF,CA0BD,CAED,cAAeR,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"./Form\";\n\nfunction Task({ editTodo, todo, deleteTodo }) {\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleEdit = text => {\n    setIsEdit(false);\n    editTodo(todo.id, text);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <Form onSubmit={handleEdit} value={todo.task} buttonText=\"Update\" />\n      ) : (\n        <p>\n          {todo.task}&nbsp;\n          <button\n            onClick={() => {\n              setIsEdit(true);\n            }}\n          >\n            edit\n          </button>\n          &nbsp;\n          <button\n            onClick={() => {\n              deleteTodo(todo.id);\n            }}\n          >\n            delete\n          </button>\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}